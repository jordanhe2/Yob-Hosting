{
    "docs": [
        {
            "location": "/",
            "text": "Yob User Manual\n\n\n\n\nWelcome to the Yob Documentation page.  There's nothing here yet, but there will be soon.\n\n\nLinks\n\n\nFor now, check out these awesome links:\n\n\n\n\nInterface\n\n\nHow-To-Guides",
            "title": "Home"
        },
        {
            "location": "/#yob-user-manual",
            "text": "Welcome to the Yob Documentation page.  There's nothing here yet, but there will be soon.",
            "title": "Yob User Manual"
        },
        {
            "location": "/#links",
            "text": "For now, check out these awesome links:   Interface  How-To-Guides",
            "title": "Links"
        },
        {
            "location": "/oldindex/",
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Oldindex"
        },
        {
            "location": "/oldindex/#welcome-to-mkdocs",
            "text": "For full documentation visit  mkdocs.org .",
            "title": "Welcome to MkDocs"
        },
        {
            "location": "/oldindex/#commands",
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "Commands"
        },
        {
            "location": "/oldindex/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Project layout"
        },
        {
            "location": "/thankyou/",
            "text": "Thank you!\n\n\n\n\nYou bought Yob!  You're great!",
            "title": "Thankyou"
        },
        {
            "location": "/thankyou/#thank-you",
            "text": "You bought Yob!  You're great!",
            "title": "Thank you!"
        },
        {
            "location": "/how-to/calccol/",
            "text": "Using Calculated Columns\n\n\nCalculated Columns is a powerful feature in Yob that allows you to generate new columns from other columns, saving you the time of manual data entry.  Another benefit of Calculated Columns is that they are updated dynamically, so you can make changes on the fly without having to manually recalculate anything.\nEach column of a Data Set has a calculated column menu that can be opened by clicking on the calculator icon in the top right of the column header.\n\n\nThe Calculated Column menu contains 3 items:\n\n\n\n\nThe expression field\n\n\nThe data selector\n\n\nThe enabled checkbox\n\n\n\n\nThe Expression Field\n\n\nThe expression field is what is used to generate the values of the column.  An example would be be \nd1c1 + 2*d2c1\n, which would make each value of the column be the sum of the cooresponding value in the first column of the first Data Set and twice the cooresponding value of the first column of the second Data Set.  You can also reference Functions or Curve Fits in your expressions.  For example, \nf3(d1c1) / 10\n would make each value of the column be 1/10th of the first column of the first Data Set run through the third function.  One thing to watch out for, however, is circular dependencies.  For example, you can't have d1c1 use d2c1 in its expression if d2c1 uses d3c1 and d3c1 uses d1c1, because of the circular dependencies. [more on this]\n\n\nThe Data Type Selector\n\n\nThe data selector provides an easy way to figure out which item it is that you want to use in your Calculated Column expression.  For example, if you wanted to use the Distance column from a Distance vs Time Data Set but didn't know its number, you could simply select it from the list then click \"Insert\", which will insert the proper text... [more on this]\n\n\nThe Enabled Checkbox\n\n\nThe enabled checkbox sets whether or not the Column should generate (or calculate) its values from the expression.\nCalculated Columns cells appear yellow and cannot be modified within the table editor like regular Columns can.",
            "title": "Calccol"
        },
        {
            "location": "/how-to/calccol/#using-calculated-columns",
            "text": "Calculated Columns is a powerful feature in Yob that allows you to generate new columns from other columns, saving you the time of manual data entry.  Another benefit of Calculated Columns is that they are updated dynamically, so you can make changes on the fly without having to manually recalculate anything.\nEach column of a Data Set has a calculated column menu that can be opened by clicking on the calculator icon in the top right of the column header.  The Calculated Column menu contains 3 items:   The expression field  The data selector  The enabled checkbox",
            "title": "Using Calculated Columns"
        },
        {
            "location": "/how-to/calccol/#the-expression-field",
            "text": "The expression field is what is used to generate the values of the column.  An example would be be  d1c1 + 2*d2c1 , which would make each value of the column be the sum of the cooresponding value in the first column of the first Data Set and twice the cooresponding value of the first column of the second Data Set.  You can also reference Functions or Curve Fits in your expressions.  For example,  f3(d1c1) / 10  would make each value of the column be 1/10th of the first column of the first Data Set run through the third function.  One thing to watch out for, however, is circular dependencies.  For example, you can't have d1c1 use d2c1 in its expression if d2c1 uses d3c1 and d3c1 uses d1c1, because of the circular dependencies. [more on this]",
            "title": "The Expression Field"
        },
        {
            "location": "/how-to/calccol/#the-data-type-selector",
            "text": "The data selector provides an easy way to figure out which item it is that you want to use in your Calculated Column expression.  For example, if you wanted to use the Distance column from a Distance vs Time Data Set but didn't know its number, you could simply select it from the list then click \"Insert\", which will insert the proper text... [more on this]",
            "title": "The Data Type Selector"
        },
        {
            "location": "/how-to/calccol/#the-enabled-checkbox",
            "text": "The enabled checkbox sets whether or not the Column should generate (or calculate) its values from the expression.\nCalculated Columns cells appear yellow and cannot be modified within the table editor like regular Columns can.",
            "title": "The Enabled Checkbox"
        },
        {
            "location": "/how-to/howto/",
            "text": "This is where a how-to guide might be placed\n\n\n\n\nPretty neat, huh?",
            "title": "Howto"
        },
        {
            "location": "/how-to/howto/#this-is-where-a-how-to-guide-might-be-placed",
            "text": "Pretty neat, huh?",
            "title": "This is where a how-to guide might be placed"
        },
        {
            "location": "/interface/interface/",
            "text": "This is where an interface guide might be placed\n\n\n\n\nPutty naet, eh?",
            "title": "Interface"
        },
        {
            "location": "/interface/interface/#this-is-where-an-interface-guide-might-be-placed",
            "text": "Putty naet, eh?",
            "title": "This is where an interface guide might be placed"
        },
        {
            "location": "/reference/reference/",
            "text": "Reference\n\n\nHere you can view the syntax of referring to each Data Type within expressions.\n\n\nFunctions\n\n\nTo refer to a function within an expression, type the following:\n\n\nfx\n\n\n\nWhere \nx\n is the number of the Function (e.g. Function 1 = f1).\n\n\nThen wrap the input of the Function with (). The input can be any value or expression that is dependent on the independent variable.\n\n\nf3(x-5)\n\n\n\nData Sets\n\n\nTo refer to a Data Set within an expression, type the following:\n\n\ndx\n\n\n\nWhere \nx\n is the number of the Data Set (e.g. Data Set 2 = d2)\n\n\nColumns\n\n\nTo refer to a Column within an expression, type the following:\n\n\ndxcy\n\n\n\nWhere \nx\n is the number of the Data Set that the Column belongs to, and \ny\n is the number of the Column to be used (e.g. Data Set 2 Column 2 = d2c2).\n\n\nCurve Fits\n\n\nTo refer to a Curve Fit within an expression, type the following:\n\n\ncfx\n\n\n\nWhere \nx\n is the number of the Curve Fit. (e.g. Curve Fit 3 = cf3)\n\n\nThen wrap the input of the curve fit with () just like with Functions.\n\n\ncf5(x+1)",
            "title": "Reference"
        },
        {
            "location": "/reference/reference/#reference",
            "text": "Here you can view the syntax of referring to each Data Type within expressions.",
            "title": "Reference"
        },
        {
            "location": "/reference/reference/#functions",
            "text": "To refer to a function within an expression, type the following:  fx  Where  x  is the number of the Function (e.g. Function 1 = f1).  Then wrap the input of the Function with (). The input can be any value or expression that is dependent on the independent variable.  f3(x-5)",
            "title": "Functions"
        },
        {
            "location": "/reference/reference/#data-sets",
            "text": "To refer to a Data Set within an expression, type the following:  dx  Where  x  is the number of the Data Set (e.g. Data Set 2 = d2)",
            "title": "Data Sets"
        },
        {
            "location": "/reference/reference/#columns",
            "text": "To refer to a Column within an expression, type the following:  dxcy  Where  x  is the number of the Data Set that the Column belongs to, and  y  is the number of the Column to be used (e.g. Data Set 2 Column 2 = d2c2).",
            "title": "Columns"
        },
        {
            "location": "/reference/reference/#curve-fits",
            "text": "To refer to a Curve Fit within an expression, type the following:  cfx  Where  x  is the number of the Curve Fit. (e.g. Curve Fit 3 = cf3)  Then wrap the input of the curve fit with () just like with Functions.  cf5(x+1)",
            "title": "Curve Fits"
        }
    ]
}
