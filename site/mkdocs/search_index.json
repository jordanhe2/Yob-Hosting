{
    "docs": [
        {
            "location": "/",
            "text": "Yob User Manual\n\n\n\n\nOverview\n\n\nYob is a \nfast\n and \nsimple\n graphing tool that's geared towards performing graphical analysis within Google Docs.\n\n\nSimple but powerful\n\n\nMaking graphs in Yob is quick and easy, making it a great choice for users who just want to plot some data and stick the graph in a document, but Yob also comes with many advanced features such as \ncalculated columns\n and \nnon-linear curve fitting\n, making it a useful tool for more advanced users as well.\n\n\nConvenient\n\n\nYob runs entirely within a Google Doc, so you never have to worry about transferring graphs between your computer and the document.  In fact, Yob \nblurs the lines\n between graph files and your document entirely.\n\n\n\n\nInstallation\n\n\n...",
            "title": "Home"
        },
        {
            "location": "/#yob-user-manual",
            "text": "",
            "title": "Yob User Manual"
        },
        {
            "location": "/#overview",
            "text": "Yob is a  fast  and  simple  graphing tool that's geared towards performing graphical analysis within Google Docs.",
            "title": "Overview"
        },
        {
            "location": "/#simple-but-powerful",
            "text": "Making graphs in Yob is quick and easy, making it a great choice for users who just want to plot some data and stick the graph in a document, but Yob also comes with many advanced features such as  calculated columns  and  non-linear curve fitting , making it a useful tool for more advanced users as well.",
            "title": "Simple but powerful"
        },
        {
            "location": "/#convenient",
            "text": "Yob runs entirely within a Google Doc, so you never have to worry about transferring graphs between your computer and the document.  In fact, Yob  blurs the lines  between graph files and your document entirely.",
            "title": "Convenient"
        },
        {
            "location": "/#installation",
            "text": "...",
            "title": "Installation"
        },
        {
            "location": "/tutorials/getting_started/",
            "text": "Getting Started",
            "title": "Getting Started"
        },
        {
            "location": "/tutorials/getting_started/#getting-started",
            "text": "",
            "title": "Getting Started"
        },
        {
            "location": "/tutorials/calculated_columns/",
            "text": "Using Calculated Columns\n\n\nCalculated Columns is a powerful feature in Yob that allows you to generate new columns from other columns, saving you the time of manual data entry.  Another benefit of Calculated Columns is that they are updated dynamically, so you can make changes on the fly without having to manually recalculate anything.\nEach column of a Data Set has a calculated column menu that can be opened by clicking on the calculator icon in the top right of the column header.\n\n\nThe Calculated Column menu contains 3 items:\n\n\n\n\nThe expression field\n\n\nThe data selector\n\n\nThe enabled checkbox\n\n\n\n\nThe Expression Field\n\n\nThe expression field is what is used to generate the values of the column.  An example would be be \nd1c1 + 2*d2c1\n, which would make each value of the column be the sum of the cooresponding value in the first column of the first Data Set and twice the cooresponding value of the first column of the second Data Set.  You can also reference Functions or Curve Fits in your expressions.  For example, \nf3(d1c1) / 10\n would make each value of the column be 1/10th of the first column of the first Data Set run through the third function.  One thing to watch out for, however, is circular dependencies.  For example, you can't have d1c1 use d2c1 in its expression if d2c1 uses d3c1 and d3c1 uses d1c1, because of the circular dependencies. [more on this]\n\n\nThe Data Type Selector\n\n\nThe data selector provides an easy way to figure out which item it is that you want to use in your Calculated Column expression.  For example, if you wanted to use the Distance column from a Distance vs Time Data Set but didn't know its number, you could simply select it from the list then click \"Insert\", which will insert the proper text... [more on this]\n\n\nThe Enabled Checkbox\n\n\nThe enabled checkbox sets whether or not the Column should generate (or calculate) its values from the expression.\nCalculated Columns cells appear yellow and cannot be modified within the table editor like regular Columns can.",
            "title": "Using Calculated Columns"
        },
        {
            "location": "/tutorials/calculated_columns/#using-calculated-columns",
            "text": "Calculated Columns is a powerful feature in Yob that allows you to generate new columns from other columns, saving you the time of manual data entry.  Another benefit of Calculated Columns is that they are updated dynamically, so you can make changes on the fly without having to manually recalculate anything.\nEach column of a Data Set has a calculated column menu that can be opened by clicking on the calculator icon in the top right of the column header.  The Calculated Column menu contains 3 items:   The expression field  The data selector  The enabled checkbox",
            "title": "Using Calculated Columns"
        },
        {
            "location": "/tutorials/calculated_columns/#the-expression-field",
            "text": "The expression field is what is used to generate the values of the column.  An example would be be  d1c1 + 2*d2c1 , which would make each value of the column be the sum of the cooresponding value in the first column of the first Data Set and twice the cooresponding value of the first column of the second Data Set.  You can also reference Functions or Curve Fits in your expressions.  For example,  f3(d1c1) / 10  would make each value of the column be 1/10th of the first column of the first Data Set run through the third function.  One thing to watch out for, however, is circular dependencies.  For example, you can't have d1c1 use d2c1 in its expression if d2c1 uses d3c1 and d3c1 uses d1c1, because of the circular dependencies. [more on this]",
            "title": "The Expression Field"
        },
        {
            "location": "/tutorials/calculated_columns/#the-data-type-selector",
            "text": "The data selector provides an easy way to figure out which item it is that you want to use in your Calculated Column expression.  For example, if you wanted to use the Distance column from a Distance vs Time Data Set but didn't know its number, you could simply select it from the list then click \"Insert\", which will insert the proper text... [more on this]",
            "title": "The Data Type Selector"
        },
        {
            "location": "/tutorials/calculated_columns/#the-enabled-checkbox",
            "text": "The enabled checkbox sets whether or not the Column should generate (or calculate) its values from the expression.\nCalculated Columns cells appear yellow and cannot be modified within the table editor like regular Columns can.",
            "title": "The Enabled Checkbox"
        },
        {
            "location": "/reference/reference/",
            "text": "Reference\n\n\nHere you can view the syntax of referring to each Data Type within expressions.\n\n\nFunctions\n\n\nTo refer to a function within an expression, type the following:\n\n\nfx\n\n\n\nWhere \nx\n is the number of the Function (e.g. Function 1 = f1).\n\n\nThen wrap the input of the Function with (). The input can be any value or expression that is dependent on the independent variable.\n\n\nf3(x-5)\n\n\n\nData Sets\n\n\nTo refer to a Data Set within an expression, type the following:\n\n\ndx\n\n\n\nWhere \nx\n is the number of the Data Set (e.g. Data Set 2 = d2)\n\n\nColumns\n\n\nTo refer to a Column within an expression, type the following:\n\n\ndxcy\n\n\n\nWhere \nx\n is the number of the Data Set that the Column belongs to, and \ny\n is the number of the Column to be used (e.g. Data Set 2 Column 2 = d2c2).\n\n\nCurve Fits\n\n\nTo refer to a Curve Fit within an expression, type the following:\n\n\ncfx\n\n\n\nWhere \nx\n is the number of the Curve Fit. (e.g. Curve Fit 3 = cf3)\n\n\nThen wrap the input of the curve fit with () just like with Functions.\n\n\ncf5(x+1)",
            "title": "Reference"
        },
        {
            "location": "/reference/reference/#reference",
            "text": "Here you can view the syntax of referring to each Data Type within expressions.",
            "title": "Reference"
        },
        {
            "location": "/reference/reference/#functions",
            "text": "To refer to a function within an expression, type the following:  fx  Where  x  is the number of the Function (e.g. Function 1 = f1).  Then wrap the input of the Function with (). The input can be any value or expression that is dependent on the independent variable.  f3(x-5)",
            "title": "Functions"
        },
        {
            "location": "/reference/reference/#data-sets",
            "text": "To refer to a Data Set within an expression, type the following:  dx  Where  x  is the number of the Data Set (e.g. Data Set 2 = d2)",
            "title": "Data Sets"
        },
        {
            "location": "/reference/reference/#columns",
            "text": "To refer to a Column within an expression, type the following:  dxcy  Where  x  is the number of the Data Set that the Column belongs to, and  y  is the number of the Column to be used (e.g. Data Set 2 Column 2 = d2c2).",
            "title": "Columns"
        },
        {
            "location": "/reference/reference/#curve-fits",
            "text": "To refer to a Curve Fit within an expression, type the following:  cfx  Where  x  is the number of the Curve Fit. (e.g. Curve Fit 3 = cf3)  Then wrap the input of the curve fit with () just like with Functions.  cf5(x+1)",
            "title": "Curve Fits"
        },
        {
            "location": "/about/",
            "text": "About",
            "title": "About"
        },
        {
            "location": "/about/#about",
            "text": "",
            "title": "About"
        }
    ]
}
